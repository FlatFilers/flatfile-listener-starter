/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Flatfile } from "../../../..";
export declare namespace Events {
    interface Options {
        environment?: environments.FlatfileEnvironment | string;
        token: core.Supplier<core.BearerToken>;
    }
}
export declare class Events {
    private readonly options;
    constructor(options: Events.Options);
    /**
     * Event topics that the Flatfile Platform emits.
     */
    list(request: Flatfile.ListEventsRequest): Promise<Flatfile.ListAllEventsResponse>;
    /**
     * @throws {Flatfile.BadRequestError}
     * @throws {Flatfile.NotFoundError}
     */
    create(request: Flatfile.Event): Promise<Flatfile.EventResponse>;
    get(eventId: Flatfile.EventId): Promise<Flatfile.EventResponse>;
    ack(eventId: Flatfile.EventId): Promise<Flatfile.Success>;
    private _getAuthorizationHeader;
}
