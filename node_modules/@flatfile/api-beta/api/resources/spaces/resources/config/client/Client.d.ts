/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../../../environments";
import * as core from "../../../../../../core";
import { Flatfile } from "../../../../../..";
export declare namespace Config {
    interface Options {
        environment?: environments.FlatfileEnvironment | string;
        token: core.Supplier<core.BearerToken>;
    }
}
export declare class Config {
    private readonly options;
    constructor(options: Config.Options);
    /**
     * Returns all space configs for an account
     * @throws {Flatfile.BadRequestError}
     */
    list(request?: Flatfile.spaces.ListSpaceConfigsRequest): Promise<Flatfile.spaces.ListSpaceConfigsResponse>;
    /**
     * Updates an existing Space Config and optionally migrates all spaces using the config
     * @throws {Flatfile.BadRequestError}
     */
    replace(request: Flatfile.spaces.UpdateSpaceConfigRequest): Promise<Flatfile.spaces.SpacePatternResponse>;
    /**
     * Creates a new Space Config
     * @throws {Flatfile.BadRequestError}
     */
    create(request: Flatfile.spaces.SpacePatternConfig): Promise<Flatfile.spaces.SpacePatternResponse>;
    private _getAuthorizationHeader;
}
