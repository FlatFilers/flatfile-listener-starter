/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { Flatfile } from "../../../..";
export declare namespace Environments {
    interface Options {
        environment?: environments.FlatfileEnvironment | string;
        token: core.Supplier<core.BearerToken>;
    }
}
export declare class Environments {
    private readonly options;
    constructor(options: Environments.Options);
    /**
     * Get all environments
     */
    list(): Promise<Flatfile.ListEnvironmentsResponse>;
    /**
     * Create a new environment
     */
    create(request: Flatfile.EnvironmentConfig): Promise<Flatfile.EnvironmentResponse>;
    /**
     * Returns a single environment
     */
    get(environmentId: string): Promise<Flatfile.Environment>;
    /**
     * Updates a single environment, to change the name for example
     */
    update(environmentId: string, request: Flatfile.EnvironmentConfig): Promise<Flatfile.Environment>;
    getAgentLogs(environmentId: string, request?: Flatfile.GetAllAgentLogsForEnvironmentRequest): Promise<Flatfile.GetAgentLogsResponse>;
    private _getAuthorizationHeader;
}
